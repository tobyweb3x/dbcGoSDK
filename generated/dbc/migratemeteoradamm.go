// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package dbc

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// MigrateMeteoraDamm is the `migrate_meteora_damm` instruction.
type MigrateMeteoraDammInstruction struct {

	// [0] = [WRITE] virtual_pool
	// ··········· virtual pool
	//
	// [1] = [WRITE] migration_metadata
	//
	// [2] = [] config
	//
	// [3] = [WRITE] pool_authority
	//
	// [4] = [WRITE] pool
	//
	// [5] = [] damm_config
	// ··········· pool config
	//
	// [6] = [WRITE] lp_mint
	//
	// [7] = [WRITE] token_a_mint
	//
	// [8] = [] token_b_mint
	//
	// [9] = [WRITE] a_vault
	//
	// [10] = [WRITE] b_vault
	//
	// [11] = [WRITE] a_token_vault
	//
	// [12] = [WRITE] b_token_vault
	//
	// [13] = [WRITE] a_vault_lp_mint
	//
	// [14] = [WRITE] b_vault_lp_mint
	//
	// [15] = [WRITE] a_vault_lp
	//
	// [16] = [WRITE] b_vault_lp
	//
	// [17] = [WRITE] base_vault
	//
	// [18] = [WRITE] quote_vault
	//
	// [19] = [WRITE] virtual_pool_lp
	//
	// [20] = [WRITE] protocol_token_a_fee
	//
	// [21] = [WRITE] protocol_token_b_fee
	//
	// [22] = [WRITE, SIGNER] payer
	//
	// [23] = [] rent
	//
	// [24] = [WRITE] mint_metadata
	//
	// [25] = [] metadata_program
	//
	// [26] = [] amm_program
	//
	// [27] = [] vault_program
	//
	// [28] = [] token_program
	// ··········· token_program
	//
	// [29] = [] associated_token_program
	//
	// [30] = [] system_program
	// ··········· System program.
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewMigrateMeteoraDammInstructionBuilder creates a new `MigrateMeteoraDammInstruction` instruction builder.
func NewMigrateMeteoraDammInstructionBuilder() *MigrateMeteoraDammInstruction {
	nd := &MigrateMeteoraDammInstruction{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 31),
	}
	nd.AccountMetaSlice[3] = ag_solanago.Meta(Addresses["FhVo3mqL8PW5pH5U2CN4XE33DokiyZnUwuGpH2hmHLuM"]).WRITE()
	nd.AccountMetaSlice[26] = ag_solanago.Meta(Addresses["Eo7WjKq67rjJQSZxS6z3YkapzY3eMj6Xy8X5EQVn5UaB"])
	nd.AccountMetaSlice[28] = ag_solanago.Meta(Addresses["TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"])
	nd.AccountMetaSlice[30] = ag_solanago.Meta(Addresses["11111111111111111111111111111111"])
	return nd
}

// SetVirtualPoolAccount sets the "virtual_pool" account.
// virtual pool
func (inst *MigrateMeteoraDammInstruction) SetVirtualPoolAccount(virtualPool ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(virtualPool).WRITE()
	return inst
}

// GetVirtualPoolAccount gets the "virtual_pool" account.
// virtual pool
func (inst *MigrateMeteoraDammInstruction) GetVirtualPoolAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetMigrationMetadataAccount sets the "migration_metadata" account.
func (inst *MigrateMeteoraDammInstruction) SetMigrationMetadataAccount(migrationMetadata ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(migrationMetadata).WRITE()
	return inst
}

// GetMigrationMetadataAccount gets the "migration_metadata" account.
func (inst *MigrateMeteoraDammInstruction) GetMigrationMetadataAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetConfigAccount sets the "config" account.
func (inst *MigrateMeteoraDammInstruction) SetConfigAccount(config ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(config)
	return inst
}

// GetConfigAccount gets the "config" account.
func (inst *MigrateMeteoraDammInstruction) GetConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetPoolAuthorityAccount sets the "pool_authority" account.
func (inst *MigrateMeteoraDammInstruction) SetPoolAuthorityAccount(poolAuthority ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(poolAuthority).WRITE()
	return inst
}

// GetPoolAuthorityAccount gets the "pool_authority" account.
func (inst *MigrateMeteoraDammInstruction) GetPoolAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetPoolAccount sets the "pool" account.
func (inst *MigrateMeteoraDammInstruction) SetPoolAccount(pool ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(pool).WRITE()
	return inst
}

// GetPoolAccount gets the "pool" account.
func (inst *MigrateMeteoraDammInstruction) GetPoolAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetDammConfigAccount sets the "damm_config" account.
// pool config
func (inst *MigrateMeteoraDammInstruction) SetDammConfigAccount(dammConfig ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(dammConfig)
	return inst
}

// GetDammConfigAccount gets the "damm_config" account.
// pool config
func (inst *MigrateMeteoraDammInstruction) GetDammConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetLpMintAccount sets the "lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) SetLpMintAccount(lpMint ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(lpMint).WRITE()
	return inst
}

// GetLpMintAccount gets the "lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) GetLpMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetTokenAMintAccount sets the "token_a_mint" account.
func (inst *MigrateMeteoraDammInstruction) SetTokenAMintAccount(tokenAMint ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(tokenAMint).WRITE()
	return inst
}

// GetTokenAMintAccount gets the "token_a_mint" account.
func (inst *MigrateMeteoraDammInstruction) GetTokenAMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetTokenBMintAccount sets the "token_b_mint" account.
func (inst *MigrateMeteoraDammInstruction) SetTokenBMintAccount(tokenBMint ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(tokenBMint)
	return inst
}

// GetTokenBMintAccount gets the "token_b_mint" account.
func (inst *MigrateMeteoraDammInstruction) GetTokenBMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetAVaultAccount sets the "a_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetAVaultAccount(aVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(aVault).WRITE()
	return inst
}

// GetAVaultAccount gets the "a_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetAVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetBVaultAccount sets the "b_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetBVaultAccount(bVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(bVault).WRITE()
	return inst
}

// GetBVaultAccount gets the "b_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetBVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetATokenVaultAccount sets the "a_token_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetATokenVaultAccount(aTokenVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(aTokenVault).WRITE()
	return inst
}

// GetATokenVaultAccount gets the "a_token_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetATokenVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetBTokenVaultAccount sets the "b_token_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetBTokenVaultAccount(bTokenVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(bTokenVault).WRITE()
	return inst
}

// GetBTokenVaultAccount gets the "b_token_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetBTokenVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetAVaultLpMintAccount sets the "a_vault_lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) SetAVaultLpMintAccount(aVaultLpMint ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(aVaultLpMint).WRITE()
	return inst
}

// GetAVaultLpMintAccount gets the "a_vault_lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) GetAVaultLpMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetBVaultLpMintAccount sets the "b_vault_lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) SetBVaultLpMintAccount(bVaultLpMint ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(bVaultLpMint).WRITE()
	return inst
}

// GetBVaultLpMintAccount gets the "b_vault_lp_mint" account.
func (inst *MigrateMeteoraDammInstruction) GetBVaultLpMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetAVaultLpAccount sets the "a_vault_lp" account.
func (inst *MigrateMeteoraDammInstruction) SetAVaultLpAccount(aVaultLp ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(aVaultLp).WRITE()
	return inst
}

// GetAVaultLpAccount gets the "a_vault_lp" account.
func (inst *MigrateMeteoraDammInstruction) GetAVaultLpAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

// SetBVaultLpAccount sets the "b_vault_lp" account.
func (inst *MigrateMeteoraDammInstruction) SetBVaultLpAccount(bVaultLp ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[16] = ag_solanago.Meta(bVaultLp).WRITE()
	return inst
}

// GetBVaultLpAccount gets the "b_vault_lp" account.
func (inst *MigrateMeteoraDammInstruction) GetBVaultLpAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(16)
}

// SetBaseVaultAccount sets the "base_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetBaseVaultAccount(baseVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[17] = ag_solanago.Meta(baseVault).WRITE()
	return inst
}

// GetBaseVaultAccount gets the "base_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetBaseVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(17)
}

// SetQuoteVaultAccount sets the "quote_vault" account.
func (inst *MigrateMeteoraDammInstruction) SetQuoteVaultAccount(quoteVault ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[18] = ag_solanago.Meta(quoteVault).WRITE()
	return inst
}

// GetQuoteVaultAccount gets the "quote_vault" account.
func (inst *MigrateMeteoraDammInstruction) GetQuoteVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(18)
}

// SetVirtualPoolLpAccount sets the "virtual_pool_lp" account.
func (inst *MigrateMeteoraDammInstruction) SetVirtualPoolLpAccount(virtualPoolLp ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[19] = ag_solanago.Meta(virtualPoolLp).WRITE()
	return inst
}

// GetVirtualPoolLpAccount gets the "virtual_pool_lp" account.
func (inst *MigrateMeteoraDammInstruction) GetVirtualPoolLpAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(19)
}

// SetProtocolTokenAFeeAccount sets the "protocol_token_a_fee" account.
func (inst *MigrateMeteoraDammInstruction) SetProtocolTokenAFeeAccount(protocolTokenAFee ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[20] = ag_solanago.Meta(protocolTokenAFee).WRITE()
	return inst
}

// GetProtocolTokenAFeeAccount gets the "protocol_token_a_fee" account.
func (inst *MigrateMeteoraDammInstruction) GetProtocolTokenAFeeAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(20)
}

// SetProtocolTokenBFeeAccount sets the "protocol_token_b_fee" account.
func (inst *MigrateMeteoraDammInstruction) SetProtocolTokenBFeeAccount(protocolTokenBFee ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[21] = ag_solanago.Meta(protocolTokenBFee).WRITE()
	return inst
}

// GetProtocolTokenBFeeAccount gets the "protocol_token_b_fee" account.
func (inst *MigrateMeteoraDammInstruction) GetProtocolTokenBFeeAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(21)
}

// SetPayerAccount sets the "payer" account.
func (inst *MigrateMeteoraDammInstruction) SetPayerAccount(payer ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[22] = ag_solanago.Meta(payer).WRITE().SIGNER()
	return inst
}

// GetPayerAccount gets the "payer" account.
func (inst *MigrateMeteoraDammInstruction) GetPayerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(22)
}

// SetRentAccount sets the "rent" account.
func (inst *MigrateMeteoraDammInstruction) SetRentAccount(rent ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[23] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *MigrateMeteoraDammInstruction) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(23)
}

// SetMintMetadataAccount sets the "mint_metadata" account.
func (inst *MigrateMeteoraDammInstruction) SetMintMetadataAccount(mintMetadata ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[24] = ag_solanago.Meta(mintMetadata).WRITE()
	return inst
}

// GetMintMetadataAccount gets the "mint_metadata" account.
func (inst *MigrateMeteoraDammInstruction) GetMintMetadataAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(24)
}

// SetMetadataProgramAccount sets the "metadata_program" account.
func (inst *MigrateMeteoraDammInstruction) SetMetadataProgramAccount(metadataProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[25] = ag_solanago.Meta(metadataProgram)
	return inst
}

// GetMetadataProgramAccount gets the "metadata_program" account.
func (inst *MigrateMeteoraDammInstruction) GetMetadataProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(25)
}

// SetAmmProgramAccount sets the "amm_program" account.
func (inst *MigrateMeteoraDammInstruction) SetAmmProgramAccount(ammProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[26] = ag_solanago.Meta(ammProgram)
	return inst
}

// GetAmmProgramAccount gets the "amm_program" account.
func (inst *MigrateMeteoraDammInstruction) GetAmmProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(26)
}

// SetVaultProgramAccount sets the "vault_program" account.
func (inst *MigrateMeteoraDammInstruction) SetVaultProgramAccount(vaultProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[27] = ag_solanago.Meta(vaultProgram)
	return inst
}

// GetVaultProgramAccount gets the "vault_program" account.
func (inst *MigrateMeteoraDammInstruction) GetVaultProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(27)
}

// SetTokenProgramAccount sets the "token_program" account.
// token_program
func (inst *MigrateMeteoraDammInstruction) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[28] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "token_program" account.
// token_program
func (inst *MigrateMeteoraDammInstruction) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(28)
}

// SetAssociatedTokenProgramAccount sets the "associated_token_program" account.
func (inst *MigrateMeteoraDammInstruction) SetAssociatedTokenProgramAccount(associatedTokenProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[29] = ag_solanago.Meta(associatedTokenProgram)
	return inst
}

// GetAssociatedTokenProgramAccount gets the "associated_token_program" account.
func (inst *MigrateMeteoraDammInstruction) GetAssociatedTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(29)
}

// SetSystemProgramAccount sets the "system_program" account.
// System program.
func (inst *MigrateMeteoraDammInstruction) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	inst.AccountMetaSlice[30] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
// System program.
func (inst *MigrateMeteoraDammInstruction) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(30)
}

func (inst MigrateMeteoraDammInstruction) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_MigrateMeteoraDamm,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst MigrateMeteoraDammInstruction) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *MigrateMeteoraDammInstruction) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.VirtualPool is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.MigrationMetadata is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.Config is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.PoolAuthority is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.Pool is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.DammConfig is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.LpMint is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.TokenAMint is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.TokenBMint is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.AVault is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.BVault is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.ATokenVault is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.BTokenVault is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.AVaultLpMint is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.BVaultLpMint is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.AVaultLp is not set")
		}
		if inst.AccountMetaSlice[16] == nil {
			return errors.New("accounts.BVaultLp is not set")
		}
		if inst.AccountMetaSlice[17] == nil {
			return errors.New("accounts.BaseVault is not set")
		}
		if inst.AccountMetaSlice[18] == nil {
			return errors.New("accounts.QuoteVault is not set")
		}
		if inst.AccountMetaSlice[19] == nil {
			return errors.New("accounts.VirtualPoolLp is not set")
		}
		if inst.AccountMetaSlice[20] == nil {
			return errors.New("accounts.ProtocolTokenAFee is not set")
		}
		if inst.AccountMetaSlice[21] == nil {
			return errors.New("accounts.ProtocolTokenBFee is not set")
		}
		if inst.AccountMetaSlice[22] == nil {
			return errors.New("accounts.Payer is not set")
		}
		if inst.AccountMetaSlice[23] == nil {
			return errors.New("accounts.Rent is not set")
		}
		if inst.AccountMetaSlice[24] == nil {
			return errors.New("accounts.MintMetadata is not set")
		}
		if inst.AccountMetaSlice[25] == nil {
			return errors.New("accounts.MetadataProgram is not set")
		}
		if inst.AccountMetaSlice[26] == nil {
			return errors.New("accounts.AmmProgram is not set")
		}
		if inst.AccountMetaSlice[27] == nil {
			return errors.New("accounts.VaultProgram is not set")
		}
		if inst.AccountMetaSlice[28] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
		if inst.AccountMetaSlice[29] == nil {
			return errors.New("accounts.AssociatedTokenProgram is not set")
		}
		if inst.AccountMetaSlice[30] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *MigrateMeteoraDammInstruction) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("MigrateMeteoraDamm")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=31]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("            virtual_pool", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("      migration_metadata", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("                  config", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("          pool_authority", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("                    pool", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("             damm_config", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("                 lp_mint", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("            token_a_mint", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("            token_b_mint", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("                 a_vault", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("                 b_vault", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("           a_token_vault", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta("           b_token_vault", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("         a_vault_lp_mint", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("         b_vault_lp_mint", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta("              a_vault_lp", inst.AccountMetaSlice.Get(15)))
						accountsBranch.Child(ag_format.Meta("              b_vault_lp", inst.AccountMetaSlice.Get(16)))
						accountsBranch.Child(ag_format.Meta("              base_vault", inst.AccountMetaSlice.Get(17)))
						accountsBranch.Child(ag_format.Meta("             quote_vault", inst.AccountMetaSlice.Get(18)))
						accountsBranch.Child(ag_format.Meta("         virtual_pool_lp", inst.AccountMetaSlice.Get(19)))
						accountsBranch.Child(ag_format.Meta("    protocol_token_a_fee", inst.AccountMetaSlice.Get(20)))
						accountsBranch.Child(ag_format.Meta("    protocol_token_b_fee", inst.AccountMetaSlice.Get(21)))
						accountsBranch.Child(ag_format.Meta("                   payer", inst.AccountMetaSlice.Get(22)))
						accountsBranch.Child(ag_format.Meta("                    rent", inst.AccountMetaSlice.Get(23)))
						accountsBranch.Child(ag_format.Meta("           mint_metadata", inst.AccountMetaSlice.Get(24)))
						accountsBranch.Child(ag_format.Meta("        metadata_program", inst.AccountMetaSlice.Get(25)))
						accountsBranch.Child(ag_format.Meta("             amm_program", inst.AccountMetaSlice.Get(26)))
						accountsBranch.Child(ag_format.Meta("           vault_program", inst.AccountMetaSlice.Get(27)))
						accountsBranch.Child(ag_format.Meta("           token_program", inst.AccountMetaSlice.Get(28)))
						accountsBranch.Child(ag_format.Meta("associated_token_program", inst.AccountMetaSlice.Get(29)))
						accountsBranch.Child(ag_format.Meta("          system_program", inst.AccountMetaSlice.Get(30)))
					})
				})
		})
}

func (obj MigrateMeteoraDammInstruction) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *MigrateMeteoraDammInstruction) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewMigrateMeteoraDammInstruction declares a new MigrateMeteoraDamm instruction with the provided parameters and accounts.
func NewMigrateMeteoraDammInstruction(
	// Accounts:
	virtualPool ag_solanago.PublicKey,
	migrationMetadata ag_solanago.PublicKey,
	config ag_solanago.PublicKey,
	poolAuthority ag_solanago.PublicKey,
	pool ag_solanago.PublicKey,
	dammConfig ag_solanago.PublicKey,
	lpMint ag_solanago.PublicKey,
	tokenAMint ag_solanago.PublicKey,
	tokenBMint ag_solanago.PublicKey,
	aVault ag_solanago.PublicKey,
	bVault ag_solanago.PublicKey,
	aTokenVault ag_solanago.PublicKey,
	bTokenVault ag_solanago.PublicKey,
	aVaultLpMint ag_solanago.PublicKey,
	bVaultLpMint ag_solanago.PublicKey,
	aVaultLp ag_solanago.PublicKey,
	bVaultLp ag_solanago.PublicKey,
	baseVault ag_solanago.PublicKey,
	quoteVault ag_solanago.PublicKey,
	virtualPoolLp ag_solanago.PublicKey,
	protocolTokenAFee ag_solanago.PublicKey,
	protocolTokenBFee ag_solanago.PublicKey,
	payer ag_solanago.PublicKey,
	rent ag_solanago.PublicKey,
	mintMetadata ag_solanago.PublicKey,
	metadataProgram ag_solanago.PublicKey,
	ammProgram ag_solanago.PublicKey,
	vaultProgram ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	associatedTokenProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *MigrateMeteoraDammInstruction {
	return NewMigrateMeteoraDammInstructionBuilder().
		SetVirtualPoolAccount(virtualPool).
		SetMigrationMetadataAccount(migrationMetadata).
		SetConfigAccount(config).
		SetPoolAuthorityAccount(poolAuthority).
		SetPoolAccount(pool).
		SetDammConfigAccount(dammConfig).
		SetLpMintAccount(lpMint).
		SetTokenAMintAccount(tokenAMint).
		SetTokenBMintAccount(tokenBMint).
		SetAVaultAccount(aVault).
		SetBVaultAccount(bVault).
		SetATokenVaultAccount(aTokenVault).
		SetBTokenVaultAccount(bTokenVault).
		SetAVaultLpMintAccount(aVaultLpMint).
		SetBVaultLpMintAccount(bVaultLpMint).
		SetAVaultLpAccount(aVaultLp).
		SetBVaultLpAccount(bVaultLp).
		SetBaseVaultAccount(baseVault).
		SetQuoteVaultAccount(quoteVault).
		SetVirtualPoolLpAccount(virtualPoolLp).
		SetProtocolTokenAFeeAccount(protocolTokenAFee).
		SetProtocolTokenBFeeAccount(protocolTokenBFee).
		SetPayerAccount(payer).
		SetRentAccount(rent).
		SetMintMetadataAccount(mintMetadata).
		SetMetadataProgramAccount(metadataProgram).
		SetAmmProgramAccount(ammProgram).
		SetVaultProgramAccount(vaultProgram).
		SetTokenProgramAccount(tokenProgram).
		SetAssociatedTokenProgramAccount(associatedTokenProgram).
		SetSystemProgramAccount(systemProgram)
}
